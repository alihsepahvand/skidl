from skidl import Pin, Part, Alias, SchLib, SKIDL, TEMPLATE

SKIDL_lib_version = '0.0.1'

runpy_lib = SchLib(tool=SKIDL).add_parts(*[
        Part(**{ 'name':'PULSEV', 'dest':TEMPLATE, 'tool':SKIDL, '_match_pin_regex':False, 'description':'Pulsed voltage source', '_name':'PULSEV', 'pulsed_value':UnitValue(50 V), 'pulse_width':PeriodValue(1 ms), 'pyspice':{'name': 'PulseVoltageSource', 'kw': {'initial_value': 'initial_value', 'pulsed_value': 'pulsed_value', 'delay_time': 'delay_time', 'rise_time': 'rise_time', 'fall_time': 'fall_time', 'pulse_width': 'pulse_width', 'period': 'period', 'p': 'node_plus', 'n': 'node_minus'}, 'add': <function add_part_to_circuit at 0x7f15220c55a0>}, 'period':PeriodValue(2 ms), 'initial_value':0, '_aliases':Alias({'pulsevoltage', 'pulsev', 'PULSEV', 'PULSEVOLTAGE'}), 'keywords':'pulsed voltage source', 'ref_prefix':'V', 'num_units':1, 'fplist':None, 'do_erc':True, 'aliases':Alias({'pulsevoltage', 'pulsev', 'PULSEV', 'PULSEVOLTAGE'}), 'pin':None, 'footprint':None, 'pins':[
            Pin(num='1',name='p',func=Pin.types.PASSIVE,do_erc=True),
            Pin(num='2',name='n',func=Pin.types.PASSIVE,do_erc=True)] }),
        Part(**{ 'name':'R', 'dest':TEMPLATE, 'tool':SKIDL, 'description':'Resistor', '_match_pin_regex':False, '_name':'R', 'pyspice':{'name': 'R', 'kw': {'value': 'resistance', 'resistance': 'resistance', 'ac': 'ac', 'multiplier': 'multiplier', 'm': 'multiplier', 'scale': 'scale', 'temp': 'temperature', 'temperature': 'temperature', 'dtemp': 'device_temperature', 'device_temperature': 'device_temperature', 'noisy': 'noisy', 'p': 'plus', 'n': 'minus'}, 'add': <function add_part_to_circuit at 0x7f15220c55a0>}, '_aliases':Alias({'R'}), 'keywords':'res resistor', 'ref_prefix':'R', 'num_units':1, 'fplist':None, 'do_erc':True, 'aliases':Alias({'R'}), 'pin':None, 'footprint':None, 'pins':[
            Pin(num='1',name='p',func=Pin.types.PASSIVE,do_erc=True),
            Pin(num='2',name='n',func=Pin.types.PASSIVE,do_erc=True)] }),
        Part(**{ 'name':'C', 'dest':TEMPLATE, 'tool':SKIDL, 'description':'Capacitor', '_match_pin_regex':False, '_name':'C', 'pyspice':{'name': 'C', 'kw': {'value': 'capacitance', 'capacitance': 'capacitance', 'model': 'model', 'multiplier': 'multiplier', 'm': 'multiplier', 'scale': 'scale', 'temp': 'temperature', 'temperature': 'temperature', 'dtemp': 'device_temperature', 'device_temperature': 'device_temperature', 'ic': 'initial_condition', 'initial_condition': 'initial_condition', 'p': 'plus', 'n': 'minus'}, 'add': <function add_part_to_circuit at 0x7f15220c55a0>}, '_aliases':Alias({'cap', 'C', 'CAP'}), 'keywords':'cap capacitor', 'ref_prefix':'C', 'num_units':1, 'fplist':None, 'do_erc':True, 'aliases':Alias({'cap', 'C', 'CAP'}), 'pin':None, 'footprint':None, 'pins':[
            Pin(num='1',name='p',func=Pin.types.PASSIVE,do_erc=True),
            Pin(num='2',name='n',func=Pin.types.PASSIVE,do_erc=True)] })])